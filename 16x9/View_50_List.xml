<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<includes>
	<include name="View_50_List">
		<description>List View (id=50)</description>
		<control type="group">
			<include>Animation.Common</include>
			<visible>Control.IsVisible(50)</visible>
			<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml)</visible>
			<control type="group">
				<control type="list" id="50">
					<top>PosterPad</top>
					<height>PosterH</height>
					<left>ListSquareX</left>
					<right>SidePad</right>
					<onleft condition="!Skin.HasSetting(global.kioskmode)">9000</onleft>
					<onright>60</onright>
					<onup>50</onup>
					<ondown>50</ondown>
					<pagecontrol>60</pagecontrol>
					<viewtype label="535">list</viewtype>
					<scrolltime tween="quadratic">400</scrolltime>
					<itemlayout width="ListW" height="64">
						<include>50itemlayout</include>
					</itemlayout>
					<focusedlayout width="ListW" height="128" condition="Skin.HasSetting(50list.showplot)">
						<control type="group">
							<visible>Control.HasFocus(50) + !Window.IsVisible(DialogVideoInfo.xml)</visible>
							<include>50focuslayout</include>
							<control type="textbox">
								<height>68</height>
								<bottom>10</bottom>
								<left>30</left>
								<right>30</right>
								<align>justify</align>
								<label>$VAR[LabelPlotBox]</label>
								<textcolor>Light1</textcolor>
								<font>Tiny</font>
							</control>
						</control>
						<control type="group">
							<visible>!Control.HasFocus(50) | Window.IsVisible(DialogVideoInfo.xml)</visible>
							<include>50itemlayout</include>
							<control type="textbox">
								<height>68</height>
								<bottom>10</bottom>
								<left>30</left>
								<right>30</right>
								<align>justify</align>
								<label>$VAR[LabelPlotBox]</label>
								<textcolor>Dark2</textcolor>
								<font>Tiny</font>
							</control>
						</control>
					</focusedlayout>
					<focusedlayout width="ListW" height="64" condition="!Skin.HasSetting(50list.showplot)">
						<control type="group">
							<visible>Control.HasFocus(50) + !Window.IsVisible(DialogVideoInfo.xml)</visible>
							<include>50focuslayout</include>
						</control>
						<control type="group">
							<visible>!Control.HasFocus(50) | Window.IsVisible(DialogVideoInfo.xml)</visible>
							<include>50itemlayout</include>
						</control>
					</focusedlayout>
				</control>
				<include>Furniture_Scrollbar</include>
			</control>
			<include>View_50_SidePoster</include>
		</control>
	</include>
	<include name="View_50_LowList">
		<description>List View (id=50)</description>
		<control type="group">
			<include>Animation.Common</include>
			<visible>Control.IsVisible(50)</visible>
			<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml)</visible>
			<control type="group">
				<posy>320</posy>
				<control type="fixedlist" id="50">
					<top>PosterPad</top>
					<height>320</height>
					<left>ListSquareX</left>
					<right>SidePad</right>
					<onleft condition="!Skin.HasSetting(global.kioskmode)">9000</onleft>
					<onright>60</onright>
					<onup>50</onup>
					<ondown>50</ondown>
					<focusposition>2</focusposition>
					<movement>2</movement>
					<pagecontrol>60</pagecontrol>
					<viewtype label="535">list</viewtype>
					<scrolltime tween="quadratic">400</scrolltime>
					<itemlayout width="ListW" height="64">
						<include>50itemlayout</include>
					</itemlayout>
					<focusedlayout width="ListW" height="64">
						<control type="group">
							<visible>Control.HasFocus(50) + !Window.IsVisible(DialogVideoInfo.xml)</visible>
							<include>50focuslayout</include>
						</control>
						<control type="group">
							<visible>!Control.HasFocus(50) | Window.IsVisible(DialogVideoInfo.xml)</visible>
							<include>50itemlayout</include>
						</control>
					</focusedlayout>
				</control>
				<control type="scrollbar" id="60">
					<onback>50</onback>
					<centerright>60</centerright>
					<posy>PosterPad</posy>
					<height>320</height>
					<width>8</width>
					<onleft>50</onleft>
					<onright condition="!Skin.HasSetting(global.kioskmode)">9000</onright>
					<texturesliderbackground border="4" colordiffuse="Dark4">scrollbar/scrollv.png</texturesliderbackground>
					<texturesliderbar border="4" colordiffuse="Dark3">scrollbar/scrollv.png</texturesliderbar>
					<texturesliderbarfocus border="4" colordiffuse="Dark2">scrollbar/scrollv.png</texturesliderbarfocus>
					<animation effect="fade" start="100" end="33" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
				</control>
			</control>
			<include>View_50_SidePoster</include>
		</control>
	</include>
	<include name="View_50_SidePoster">
		<control type="group" description="Poster">
			<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml)</visible>
			<left>SidePad</left>
			<top>PosterPad</top>
			<visible>!IsEmpty(ListItem.Icon)</visible>
			<control type="image">
				<top>PosterH</top>
				<width>PosterH</width>
				<height>PosterH</height>
				<fadetime>100</fadetime>
				<aspectratio align="center" aligny="top" scalediffuse="false">keep</aspectratio>
				<texture flipy="true" diffuse="diffuse/listposter-ref.png" background="true">$VAR[PosterImage]</texture>
				<visible>Skin.HasSetting(show.reflections)</visible>
			</control>
			<control type="image">
				<centertop>PosterH</centertop>
				<width>PosterW</width>
				<height>48</height>
				<align>center</align>
				<aspectratio>stretch</aspectratio>
				<texture align="center" aligny="bottom">diffuse/shadowspot.png</texture>
			</control>
			<control type="image">
				<width>PosterH</width>
				<height>PosterH</height>
				<fadetime>100</fadetime>
				<aspectratio align="center" aligny="bottom" scalediffuse="false">keep</aspectratio>
				<texture background="true">$VAR[PosterImage]</texture>
			</control>
		</control>
	</include>
	<include name="View_50_SidePoster_Square">
		<control type="group" description="Poster">
			<left>SidePad</left>
			<top>PosterPad</top>
			<visible>!IsEmpty(ListItem.Icon)</visible>
			<control type="image">
				<top>PosterH</top>
				<width>PosterH</width>
				<height>PosterH</height>
				<fadetime>100</fadetime>
				<aspectratio align="center" aligny="top" scalediffuse="false">keep</aspectratio>
				<texture flipy="true" diffuse="diffuse/listposter-ref.png" background="true">$VAR[PosterImage]</texture>
				<visible>Skin.HasSetting(show.reflections)</visible>
			</control>
			<control type="image">
				<centertop>PosterH</centertop>
				<width>PosterH</width>
				<height>48</height>
				<align>center</align>
				<aspectratio>stretch</aspectratio>
				<texture align="center" aligny="bottom">diffuse/shadowspot.png</texture>
			</control>
			<control type="image">
				<width>PosterH</width>
				<height>PosterH</height>
				<fadetime>100</fadetime>
				<aspectratio align="center" aligny="bottom" scalediffuse="false">keep</aspectratio>
				<texture background="true">$VAR[PosterImage]</texture>
			</control>
		</control>
	</include>
	<include name="View_50_List_Square">
		<description>List View (id=50)</description>
		<control type="group">
			<include>Animation.Common</include>
			<visible>Control.IsVisible(50)</visible>
			<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml)</visible>
			<control type="group">
				<control type="list" id="50">
					<top>PosterPad</top>
					<height>PosterH</height>
					<left>ListSquareX</left>
					<right>SidePad</right>
					<onleft condition="!Skin.HasSetting(global.kioskmode)">9000</onleft>
					<onright>60</onright>
					<onup>50</onup>
					<ondown>50</ondown>
					<pagecontrol>60</pagecontrol>
					<viewtype label="535">list</viewtype>
					<scrolltime>200</scrolltime>
					<itemlayout width="ListSquareW" height="64">
						<include>50itemlayout_square</include>
					</itemlayout>
					<focusedlayout width="ListSquareW" height="64">
						<control type="group">
							<visible>Control.HasFocus(50)</visible>
							<include>50focuslayout_square</include>
						</control>
						<control type="group">
							<visible>!Control.HasFocus(50)</visible>
							<include>50itemlayout_square</include>
						</control>
					</focusedlayout>
				</control>
				<include>Furniture_Scrollbar</include>
			</control>
			<include>View_50_SidePoster_Square</include>
		</control>
	</include>
	<include name="View_550_List">
		<description>List View (id=550)</description>
		<control type="group">
			<include>Animation.Common</include>
			<visible>Control.IsVisible(550)</visible>
			<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml)</visible>
			<control type="group">
				<control type="list" id="550">
					<visible>![Container.Content(musicvideos) | Container.Content(movies) | Container.Content(tvshows) | Container.Content(actors) | Container.Content(sets) | Container.Content(seasons) | [Container.Content(files) + !substring(Container.FolderPath,plugin://,left) + !stringcompare(Container.FolderPath,library://video/movies/) + !stringcompare(Container.FolderPath,library://video/tvshows/) + !stringcompare(Container.FolderPath,special://videoplaylists/)] | [Container.Content(episodes) + !substring(Container.FolderPath,plugin://,left)]]</visible>
					<top>PosterPad</top>
					<height>PosterH</height>
					<left>ListSquareX</left>
					<right>SidePad</right>
					<onleft condition="!Skin.HasSetting(global.kioskmode)">9000</onleft>
					<onright>60</onright>
					<onup>550</onup>
					<ondown>550</ondown>
					<pagecontrol>60</pagecontrol>
					<viewtype label="535">list</viewtype>
					<scrolltime>200</scrolltime>
					<itemlayout width="ListSquareW" height="64">
						<include>50itemlayout_square</include>
					</itemlayout>
					<focusedlayout width="ListSquareW" height="64">
						<control type="group">
							<visible>Control.HasFocus(550)</visible>
							<include>50focuslayout_square</include>
						</control>
						<control type="group">
							<visible>!Control.HasFocus(550)</visible>
							<include>50itemlayout_square</include>
						</control>
					</focusedlayout>
				</control>
				<include>Furniture_Scrollbar</include>
			</control>
			<control type="group" description="Poster">
				<left>SidePad</left>
				<top>PosterPad</top>
				<control type="image">
					<top>PosterH</top>
					<width>PosterH</width>
					<height>PosterH</height>
					<fadetime>100</fadetime>
					<aspectratio align="center" aligny="top" scalediffuse="false">keep</aspectratio>
					<texture flipy="true" diffuse="diffuse/listposter-ref.png" background="true">$VAR[PosterImage]</texture>
					<visible>Skin.HasSetting(show.reflections)</visible>
				</control>
				<control type="image">
					<centertop>PosterH</centertop>
					<width>PosterH</width>
					<height>48</height>
					<align>center</align>
					<aspectratio>stretch</aspectratio>
					<texture align="center" aligny="bottom">diffuse/shadowspot.png</texture>
				</control>
				<control type="image">
					<width>PosterH</width>
					<height>PosterH</height>
					<fadetime>100</fadetime>
					<aspectratio align="center" aligny="bottom" scalediffuse="false">keep</aspectratio>
					<texture diffuse="diffuse/listposter.png" background="true">$VAR[PosterImage]</texture>
				</control>
				<control type="image">
					<left>-24</left>
					<top>-24</top>
					<width>PosterShadowH</width>
					<height>PosterShadowH</height>
					<texture border="32">common/shadow-24.png</texture>
				</control>
			</control>
		</control>
	</include>
	<include name="50focuslayout">
		<control type="button">
			<texturefocus>-</texturefocus>
			<texturenofocus>-</texturenofocus>
			<onfocus condition="Container.Content(movies)">ClearProperty(TVShowID,home)</onfocus>
			<onfocus condition="Container.Content(tvshows)">SetProperty(TVShowID,$INFO[ListItem.DBID],home)</onfocus>
		</control>
		<control type="image">
			<width>100%</width>
			<height>100%</height>
			<texture border="8" colordiffuse="Dark1">common/box.png</texture>
			<bordertexture colordiffuse="$VAR[ColourHighlight]">common/white.png</bordertexture>
			<bordersize>6,0,0,0</bordersize>
		</control>
		<control type="image">
			<left>6</left>
			<width>1</width>
			<texture colordiffuse="Light1">common/white.png</texture>
		</control>
		<control type="label">
			<posx>30</posx>
			<width>200</width>
			<font>Small</font>
			<aligny>center</aligny>
			<height>64</height>
			<textcolor>Light1</textcolor>
			<selectedcolor>Light1</selectedcolor>
			<label>$VAR[LabelYear]</label>
			<visible>Container.Content(movies)</visible>
		</control>
		<control type="label">
			<posx>120</posx>
			<width>auto</width>
			<aligny>center</aligny>
			<height>64</height>
			<font>SmallBold</font>
			<textcolor>Light1</textcolor>
			<selectedcolor>Light1</selectedcolor>
			<label>$INFO[ListItem.Label]</label>
			<animation effect="slide" start="0" end="-90" time="0" condition="!Container.Content(movies)">Conditional</animation>
			<visible>!Container.Content(episodes) + !Container.Content(tvshows)</visible>
		</control>
		<control type="label">
			<posx>30</posx>
			<width>auto</width>
			<aligny>center</aligny>
			<height>64</height>
			<font>SmallBold</font>
			<textcolor>Light1</textcolor>
			<selectedcolor>Light1</selectedcolor>
			<label>$INFO[ListItem.Label]</label>
			<visible>Container.Content(episodes) | Container.Content(tvshows)</visible>
		</control>
		<control type="label">
			<right>154</right>
			<width>500</width>
			<aligny>center</aligny>
			<height>64</height>
			<align>right</align>
			<font>Small</font>
			<textcolor>Light1</textcolor>
			<selectedcolor>Light1</selectedcolor>
			<label>$VAR[LabelDuration]</label>
		</control>
		<control type="image">
			<centerright>110</centerright>
			<centertop>32</centertop>
			<width>32</width>
			<height>32</height>
			<aspectratio aligny="top">keep</aspectratio>
			<texture>$VAR[PercentWatched]</texture>
			<visible>!stringcompare(ListItem.Label,..)</visible>
		</control>
		<control type="label">
			<centerright>110</centerright>
			<centertop>32</centertop>
			<width>32</width>
			<height>32</height>
			<font>symbolview</font>
			<label>$VAR[PercentWatchedLabel]</label>
			<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
			<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + Skin.HasSetting(furniture.unwatched)</visible>
			<animation effect="slide" start="0" end="64" time="0" condition="Container.Content(Seasons)">Conditional</animation>
		</control>
		<control type="label">
			<centerright>110</centerright>
			<centertop>32</centertop>
			<width>32</width>
			<height>32</height>
			<font>symbolview</font>
			<label>$VAR[PercentWatchedLabel]</label>
			<textcolor>$VAR[PlayingColourHighlight]</textcolor>
			<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
			<animation effect="slide" start="0" end="64" time="0" condition="Container.Content(Seasons)">Conditional</animation>
		</control>
		<control type="label">
			<centerright>110</centerright>
			<centertop>32</centertop>
			<width>32</width>
			<height>32</height>
			<font>symbolview</font>
			<label>$VAR[PercentWatchedLabel]</label>
			<textcolor>$VAR[WatchedColourHighlight]</textcolor>
			<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
			<animation effect="slide" start="0" end="64" time="0" condition="Container.Content(Seasons)">Conditional</animation>
		</control>
		<control type="label">
			<centerright>110</centerright>
			<centertop>32</centertop>
			<width>32</width>
			<height>32</height>
			<font>symbolview</font>
			<label>$VAR[PercentWatchedLabel]</label>
			<textcolor>$VAR[ResumeColourHighlight]</textcolor>
			<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
			<animation effect="slide" start="0" end="64" time="0" condition="Container.Content(Seasons)">Conditional</animation>
		</control>
		<control type="label">
			<centerright>110</centerright>
			<centertop>32</centertop>
			<width>32</width>
			<height>32</height>
			<font>symbolview</font>
			<label>$VAR[PercentWatchedLabel]</label>
			<textcolor>$VAR[NewColourHighlight]</textcolor>
			<visible>!stringcompare(ListItem.Label,..) + [SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]</visible>
			<animation effect="slide" start="0" end="64" time="0" condition="Container.Content(Seasons)">Conditional</animation>
		</control>
		<control type="label">
			<right>30</right>
			<width>500</width>
			<aligny>center</aligny>
			<height>64</height>
			<align>right</align>
			<font>Small</font>
			<textcolor>Light1</textcolor>
			<selectedcolor>Light1</selectedcolor>
			<label>$INFO[ListItem.Rating]</label>
			<visible>!stringcompare(ListItem.Label,..)</visible>
			<visible>!Container.Content(seasons)</visible>
			<visible>!SubString(Container.FolderPath,plugin://,left) + !Container.Content(plugins) + !Container.Content(addons)</visible>
		</control>
		<control type="label">
			<right>30</right>
			<width>500</width>
			<aligny>center</aligny>
			<height>64</height>
			<align>right</align>
			<font>Small</font>
			<textcolor>Light1</textcolor>
			<selectedcolor>Light1</selectedcolor>
			<label>$INFO[ListItem.Year]</label>
			<visible>SubString(Container.FolderPath,plugin://plugin.program.advanced.launcher,left)</visible>
		</control>
	</include>
	<include name="50itemlayout">
		<control type="label">
			<posx>30</posx>
			<width>200</width>
			<font>Small</font>
			<aligny>center</aligny>
			<height>64</height>
			<label>$VAR[LabelYear]</label>
			<textcolor>Dark1</textcolor>
			<selectedcolor>Dark1</selectedcolor>
			<visible>Container.Content(movies)</visible>
		</control>
		<control type="label">
			<posx>120</posx>
			<width>auto</width>
			<aligny>center</aligny>
			<height>64</height>
			<font>SmallBold</font>
			<label>$INFO[ListItem.Label]</label>
			<textcolor>Dark1</textcolor>
			<selectedcolor>Dark1</selectedcolor>
			<animation effect="slide" start="0" end="-90" time="0" condition="!Container.Content(movies)">Conditional</animation>
			<visible>!Container.Content(episodes) + !Container.Content(tvshows)</visible>
		</control>
		<control type="label">
			<posx>30</posx>
			<width>auto</width>
			<aligny>center</aligny>
			<height>64</height>
			<font>SmallBold</font>
			<label>$INFO[ListItem.Label]</label>
			<textcolor>Dark1</textcolor>
			<selectedcolor>Dark1</selectedcolor>
			<visible>Container.Content(episodes) | Container.Content(tvshows)</visible>
		</control>
		<control type="label">
			<right>154</right>
			<width>500</width>
			<aligny>center</aligny>
			<height>64</height>
			<align>right</align>
			<font>Small</font>
			<textcolor>Dark1</textcolor>
			<selectedcolor>Dark1</selectedcolor>
			<label>$VAR[LabelDuration]</label>
		</control>
		<control type="image">
			<centerright>110</centerright>
			<centertop>32</centertop>
			<width>32</width>
			<height>32</height>
			<aspectratio aligny="top">keep</aspectratio>
			<texture>$VAR[PercentWatched]</texture>
			<visible>!stringcompare(ListItem.Label,..)</visible>
		</control>
		<control type="label">
			<centerright>110</centerright>
			<centertop>32</centertop>
			<width>32</width>
			<height>32</height>
			<font>symbolview</font>
			<label>$VAR[PercentWatchedLabel]</label>
			<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
			<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + Skin.HasSetting(furniture.unwatched)</visible>
			<animation effect="slide" start="0" end="64" time="0" condition="Container.Content(Seasons)">Conditional</animation>
		</control>
		<control type="label">
			<centerright>110</centerright>
			<centertop>32</centertop>
			<width>32</width>
			<height>32</height>
			<font>symbolview</font>
			<label>$VAR[PercentWatchedLabel]</label>
			<textcolor>$VAR[PlayingColourHighlight]</textcolor>
			<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
			<animation effect="slide" start="0" end="64" time="0" condition="Container.Content(Seasons)">Conditional</animation>
		</control>
		<control type="label">
			<centerright>110</centerright>
			<centertop>32</centertop>
			<width>32</width>
			<height>32</height>
			<font>symbolview</font>
			<label>$VAR[PercentWatchedLabel]</label>
			<textcolor>$VAR[WatchedColourHighlight]</textcolor>
			<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
			<animation effect="slide" start="0" end="64" time="0" condition="Container.Content(Seasons)">Conditional</animation>
		</control>
		<control type="label">
			<centerright>110</centerright>
			<centertop>32</centertop>
			<width>32</width>
			<height>32</height>
			<font>symbolview</font>
			<label>$VAR[PercentWatchedLabel]</label>
			<textcolor>$VAR[ResumeColourHighlight]</textcolor>
			<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
			<animation effect="slide" start="0" end="64" time="0" condition="Container.Content(Seasons)">Conditional</animation>
		</control>
		<control type="label">
			<centerright>110</centerright>
			<centertop>32</centertop>
			<width>32</width>
			<height>32</height>
			<font>symbolview</font>
			<label>$VAR[PercentWatchedLabel]</label>
			<textcolor>$VAR[NewColourHighlight]</textcolor>
			<visible>!stringcompare(ListItem.Label,..) + [SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]</visible>
			<animation effect="slide" start="0" end="64" time="0" condition="Container.Content(Seasons)">Conditional</animation>
		</control>
		<control type="label">
			<right>30</right>
			<width>500</width>
			<aligny>center</aligny>
			<height>64</height>
			<align>right</align>
			<font>Small</font>
			<textcolor>Dark1</textcolor>
			<selectedcolor>Dark1</selectedcolor>
			<label>$INFO[ListItem.Rating]</label>
			<visible>!stringcompare(ListItem.Label,..)</visible>
			<visible>!Container.Content(seasons)</visible>
			<visible>!SubString(Container.FolderPath,plugin://,left) + !Container.Content(plugins) + !Container.Content(addons)</visible>
		</control>
		<control type="label">
			<right>30</right>
			<width>500</width>
			<aligny>center</aligny>
			<height>64</height>
			<align>right</align>
			<font>Small</font>
			<textcolor>Dark1</textcolor>
			<selectedcolor>Dark1</selectedcolor>
			<label>$INFO[ListItem.Year]</label>
			<visible>SubString(Container.FolderPath,plugin://plugin.program.advanced.launcher,left)</visible>
		</control>
	</include>
	<include name="50itemlayout_square">
		<control type="image">
			<left>25</left>
			<centertop>32</centertop>
			<width>32</width>
			<height>32</height>
			<aspectratio aligny="top">keep</aspectratio>
			<texture colordiffuse="Dark1">indicator/playlist.png</texture>
			<visible>ListItem.IsPlaying</visible>
		</control>
		<control type="label">
			<posx>30</posx>
			<width>auto</width>
			<aligny>center</aligny>
			<height>64</height>
			<font>SmallBold</font>
			<label>$INFO[ListItem.Label]</label>
			<textcolor>Dark1</textcolor>
			<selectedcolor>Dark1</selectedcolor>
			<visible>!ListItem.IsPlaying</visible>
		</control>
		<control type="label">
			<posx>78</posx>
			<width>auto</width>
			<aligny>center</aligny>
			<height>64</height>
			<font>SmallBold</font>
			<label>$INFO[ListItem.Label]</label>
			<textcolor>Dark1</textcolor>
			<selectedcolor>Dark1</selectedcolor>
			<visible>ListItem.IsPlaying</visible>
		</control>
		<control type="label">
			<right>30</right>
			<width>500</width>
			<aligny>center</aligny>
			<height>64</height>
			<align>right</align>
			<font>Small</font>
			<textcolor>Dark1</textcolor>
			<selectedcolor>Dark1</selectedcolor>
			<label>$INFO[ListItem.Label2]</label>
		</control>
	</include>
	<include name="50focuslayout_square">
		<control type="image">
			<width>100%</width>
			<height>100%</height>
			<texture border="8" colordiffuse="Dark1">common/box.png</texture>
			<bordertexture colordiffuse="$VAR[ColourHighlight]">common/white.png</bordertexture>
			<bordersize>6,0,0,0</bordersize>
		</control>
		<control type="image">
			<left>6</left>
			<width>1</width>
			<texture colordiffuse="Light1">common/white.png</texture>
		</control>
		<control type="image">
			<left>25</left>
			<centertop>32</centertop>
			<width>32</width>
			<height>32</height>
			<aspectratio aligny="top">keep</aspectratio>
			<texture colordiffuse="Light1">indicator/playlist.png</texture>
			<visible>ListItem.IsPlaying</visible>
		</control>
		<control type="label">
			<posx>30</posx>
			<width>auto</width>
			<aligny>center</aligny>
			<height>64</height>
			<font>SmallBold</font>
			<label>$INFO[ListItem.Label]</label>
			<textcolor>Light1</textcolor>
			<selectedcolor>Light1</selectedcolor>
			<visible>!ListItem.IsPlaying</visible>
		</control>
		<control type="label">
			<posx>78</posx>
			<width>auto</width>
			<aligny>center</aligny>
			<height>64</height>
			<font>SmallBold</font>
			<label>$INFO[ListItem.Label]</label>
			<textcolor>Light1</textcolor>
			<selectedcolor>Light1</selectedcolor>
			<visible>ListItem.IsPlaying</visible>
		</control>
		<control type="label">
			<right>30</right>
			<width>500</width>
			<aligny>center</aligny>
			<height>64</height>
			<align>right</align>
			<font>Small</font>
			<textcolor>Light1</textcolor>
			<selectedcolor>Light1</selectedcolor>
			<label>$INFO[ListItem.Label2]</label>
		</control>
	</include>
</includes>